{"version":3,"sources":["pages/Home/Home.module.scss","utils/createPage.js","utils/htmlToText.js","schemas.js","models/TopicFeeds.js","pages/Home/Home.js","pages/Home/index.js","models/TopicDetail.js","pages/Topic/Topic.js","pages/Topic/index.js","App.js","serviceWorker.js","index.js","../../cnodejs.api/lib/index.js"],"names":["module","exports","topicFeedsItemContent","createPage","_ref","models","getInitialProps","mapStateToProps","mapDispatchToProps","Page","ConnectedPage","connect","WrappedPage","_PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mounted","inherits","createClass","key","value","store","context","keys","reduce","rcc","model","Date","now","setState","_this2","unmodel","map","react_default","a","createElement","assign","PureComponent","displayName","concat","name","contextTypes","PropTypes","object","caches","htmlToText","html","container","document","innerHTML","innerText","author","Schema","topic","entity","TopicFeeds","namespace","arguments","length","undefined","api","page","then","data","item","author_id","topicItem","objectWithoutProperties","objectSpread","id","meta","hasMore","entities","schema","getTopics","getData","getEntity","getState","ListPage","Home","onPullHookChange","pullHookState","onRefresh","done","refreshDone","onLoadMore","loadMoreDone","renderTopic","index","react_onsenui","onClick","navigator","pushPage","path","passProps","className","title","classNames","classes","content","prevProps","prevState","refreshing","moreLoading","topics","renderToolbar","icon","onInfiniteScroll","onChange","onLoad","size","spin","dataSource","renderRow","topicFeeds","_ref2","dispatch","actions","initiateIfNeed","_ref3","initiate","getInitiate","loadMore","getLoadMore","moreLoadError","error","loading","refreshError","_ref4","TopicDetail","schemas","getTopic","entitiesState","articleEntity","getDetail","DetailPage","Topic","dangerouslySetInnerHTML","__html","replies","reply","renderReplies","topicDetail","INITIAL_ROUTE","App","handleClick","renderPage","_ref$passProps","pages_Home","pages_Topic","initialRoute","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","init","ReactDOM","render","es","src_App","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","defineProperty","setAccessToken","accessToken","localStorage","setItem","PREFIX","getAccessToken","getItem","request","options","method","originalReturn","url","accesstoken","test","Error","json","success","error_msg","loadTopicList","tab","loadTopicDetail","collectTopic","isCollect","Content-Type","body","likeReply","action","loadUserDetail","loadUserCollections","loadMessages","markMessage","markAllMessage","login","obj","target","i","prototype","hasOwnProperty","_objectWithoutProperties","logout"],"mappings":"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","file":"static/js/main.66ec2a02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topicFeedsItemContent\":\"Home_topicFeedsItemContent__1xFDG\"};","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\n\nexport default ({\n  models,\n  getInitialProps,\n  mapStateToProps,\n  mapDispatchToProps,\n}) => Page => {\n  const ConnectedPage = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Page);\n  class WrappedPage extends PureComponent {\n    static displayName = `createPage(${Page.displayName ||\n      Page.name ||\n      'Page'})`;\n\n    static contextTypes = {\n      store: PropTypes.object,\n    };\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        mounted: false,\n      };\n      this.models = null;\n    }\n\n    componentDidMount() {\n      const { store } = this.context;\n      if (store) {\n        this.models = Object.keys(models).reduce((rcc, key) => {\n          const model = new models[key](Date.now());\n          store.model(model);\n          rcc[key] = model;\n          return rcc;\n        }, {});\n        getInitialProps({ props: this.props, store, models: this.models });\n      }\n      this.setState({ mounted: true });\n    }\n\n    componentWillUnmount() {\n      const { store } = this.context;\n      if (store && this.models) {\n        store.unmodel(Object.keys(this.models).map(key => this.models[key]));\n      }\n    }\n\n    render() {\n      const { mounted } = this.state;\n      if (!mounted) {\n        return null;\n      }\n      return <ConnectedPage {...this.props} models={this.models} />;\n    }\n  }\n  return WrappedPage;\n};\n","const caches = {};\n\nexport default html => {\n  if (caches[html]) return caches[html];\n  const container = document.createElement('div');\n  container.innerHTML = html;\n  caches[html] = container.innerText;\n  return caches[html];\n};\n","import { Schema } from 'redumd';\n\nexport const author = new Schema('authors');\nexport const topic = new Schema('topics', {\n  author: author.entity,\n});\n","import { entities, ListPage } from 'redumd';\nimport * as api from 'cnodejs.api';\nimport { topic } from '../schemas';\n\nclass TopicFeeds extends ListPage {\n  constructor(namespace = '') {\n    super(`TopicFeeds/${namespace}`, {\n      api: page => {\n        return api.loadTopicList('', page, 15).then(data => {\n          return {\n            data: data.map(item => {\n              const { author, author_id, ...topicItem } = item;\n              topicItem.author = {\n                ...author,\n                id: author_id,\n              };\n              return topicItem;\n            }),\n            meta: {\n              page,\n              hasMore: data.length > 0,\n            },\n          };\n        });\n      },\n      entities,\n      schema: topic,\n    });\n\n    this.getTopics = state =>\n      this.getData(state).map(id =>\n        topic.getEntity(entities.getState(state), id)\n      );\n  }\n}\n\nexport default TopicFeeds;\n","import classNames from 'classnames';\nimport React, { PureComponent } from 'react';\nimport {\n  Card,\n  Icon,\n  List,\n  Page,\n  PullHook,\n  Toolbar,\n  ToolbarButton,\n} from 'react-onsenui';\nimport createPage from '../../utils/createPage';\nimport htmlToText from '../../utils/htmlToText';\nimport TopicFeeds from '../../models/TopicFeeds';\nimport classes from './Home.module.scss';\n\nclass Home extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pullHookState: 'initial',\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.refreshing && !this.props.refreshing) {\n      this.setState({ pullHookState: 'initial' });\n      if (this.refreshDone) {\n        this.refreshDone();\n        this.refreshDone = null;\n      }\n    }\n    if (prevProps.moreLoading && !this.props.moreLoading) {\n      if (this.loadMoreDone) {\n        this.loadMoreDone();\n        this.loadMoreDone = null;\n      }\n    }\n  }\n\n  onPullHookChange = ({ state }) => {\n    this.setState({ pullHookState: state });\n  };\n\n  onRefresh = done => {\n    this.refreshDone = done;\n    this.props.onRefresh();\n  };\n\n  onLoadMore = done => {\n    this.loadMoreDone = done;\n    this.props.onLoadMore();\n  };\n\n  renderTopic = (topic, index) => {\n    return (\n      <Card\n        key={topic.id}\n        onClick={() =>\n          this.props.navigator.pushPage({\n            path: '/topic',\n            passProps: { id: topic.id },\n          })\n        }\n      >\n        <div className=\"title\">{topic.title}</div>\n        <div className={classNames('content', classes.topicFeedsItemContent)}>\n          {htmlToText(topic.content)}\n        </div>\n      </Card>\n    );\n  };\n\n  render() {\n    const { topics } = this.props;\n    const { pullHookState } = this.state;\n    return (\n      <Page\n        renderToolbar={() => (\n          <Toolbar>\n            <div className=\"left\">\n              <ToolbarButton>\n                <Icon icon=\"md-menu\" />\n              </ToolbarButton>\n            </div>\n            <div className=\"center\">CNode 社区</div>\n          </Toolbar>\n        )}\n        onInfiniteScroll={this.onLoadMore}\n      >\n        <PullHook onChange={this.onPullHookChange} onLoad={this.onRefresh}>\n          {pullHookState === 'initial' ? (\n            <span>\n              <Icon size={35} spin={false} icon=\"ion-arrow-down-a\" />\n              <span>下拉刷新</span>\n            </span>\n          ) : pullHookState === 'preaction' ? (\n            <span>\n              <Icon size={35} spin={false} icon=\"ion-arrow-up-a\" />\n              <span>松开刷新</span>\n            </span>\n          ) : (\n            <span>\n              <Icon size={35} spin icon=\"ion-load-d\" />\n              <span>加载中...</span>\n            </span>\n          )}\n        </PullHook>\n        <List dataSource={topics || []} renderRow={this.renderTopic} />\n      </Page>\n    );\n  }\n}\n\nexport default createPage({\n  models: {\n    topicFeeds: TopicFeeds,\n  },\n  getInitialProps: ({ store, models: { topicFeeds } }) => {\n    store.dispatch(topicFeeds.actions.initiateIfNeed());\n  },\n  mapStateToProps: (state, { models: { topicFeeds } }) => {\n    const initiate = topicFeeds.getInitiate(state);\n    const loadMore = topicFeeds.getLoadMore(state);\n    return {\n      topics: topicFeeds.getTopics(state),\n      hasMore: topicFeeds.hasMore(state),\n      moreLoadError: loadMore.error,\n      moreLoading: loadMore.loading,\n      refreshError: initiate.error,\n      refreshing: initiate.loading,\n    };\n  },\n  mapDispatchToProps: (dispatch, { models: { topicFeeds } }) => ({\n    onRefresh: () => dispatch(topicFeeds.actions.initiate()),\n    onLoadMore: () => dispatch(topicFeeds.actions.loadMore()),\n  }),\n})(Home);\n","import Home from './Home';\n\nexport default Home;\n","import { entities, DetailPage } from 'redumd';\nimport * as api from 'cnodejs.api';\nimport * as schemas from '../schemas';\n\nclass TopicDetail extends DetailPage {\n  constructor(namespace = '') {\n    super(`TopicDetail/${namespace}`, {\n      api: id =>\n        api.loadTopicDetail(id).then(({ author, author_id, ...data }) => ({\n          data: {\n            ...data,\n            author: {\n              ...author,\n              id: author_id,\n            },\n          },\n        })),\n      entities,\n      schema: schemas.topic,\n    });\n\n    this.getTopic = state => {\n      const entitiesState = entities.getState(state);\n      const articleEntity = this.getDetail(state);\n      return {\n        ...articleEntity,\n        author: articleEntity\n          ? schemas.author.getEntity(entitiesState, articleEntity.author)\n          : null,\n      };\n    };\n  }\n}\n\nexport default TopicDetail;\n","import React, { PureComponent } from 'react';\nimport {\n  BackButton,\n  Card,\n  List,\n  ListItem,\n  ListTitle,\n  Page,\n  Toolbar,\n} from 'react-onsenui';\nimport createPage from '../../utils/createPage';\nimport * as models from '../../models';\n\nclass Topic extends PureComponent {\n  renderTopic(topic) {\n    if (!topic) {\n      return null;\n    }\n    return (\n      <Card>\n        <div className=\"title\">{topic.title}</div>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{ __html: topic.content }}\n        />\n      </Card>\n    );\n  }\n\n  renderReplies(replies = []) {\n    return (\n      <div>\n        <ListTitle>{`${replies.length}条回复`}</ListTitle>\n        <List\n          dataSource={replies}\n          renderRow={(reply, index) => {\n            return (\n              <ListItem key={reply.id}>\n                <div dangerouslySetInnerHTML={{ __html: reply.content }} />\n              </ListItem>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { topic } = this.props;\n    return (\n      <Page\n        renderToolbar={() => (\n          <Toolbar>\n            <div className=\"left\">\n              <BackButton>返回</BackButton>\n            </div>\n            <div className=\"center\">话题</div>\n          </Toolbar>\n        )}\n      >\n        {topic ? this.renderTopic(topic) : null}\n        {topic && topic.replies ? this.renderReplies(topic.replies) : null}\n      </Page>\n    );\n  }\n}\n\nexport default createPage({\n  models: {\n    topicDetail: models.TopicDetail,\n  },\n  getInitialProps: ({ props: { id }, store, models: { topicDetail } }) => {\n    store.dispatch(topicDetail.actions.initiateIfNeed(id));\n  },\n  mapStateToProps: (state, { models: { topicDetail } }) => {\n    const initiate = topicDetail.getInitiate(state);\n    return {\n      topic: topicDetail.getTopic(state),\n      refreshError: initiate.error,\n      refreshing: initiate.loading,\n    };\n  },\n  mapDispatchToProps: (dispatch, { models: { topicDetail } }) => ({\n    onRefresh: () => dispatch(topicDetail.actions.initiate()),\n  }),\n})(Topic);\n","import Topic from './Topic';\n\nexport default Topic;\n","import React, { PureComponent } from 'react';\nimport { Navigator } from 'react-onsenui';\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport Home from './pages/Home';\nimport Topic from './pages/Topic';\n\nconst INITIAL_ROUTE = { path: '/' };\n\nclass App extends PureComponent {\n  handleClick = () => {};\n\n  renderPage = ({ path, passProps = {} }, navigator) => {\n    if (path === '/') {\n      return <Home {...passProps} key={path} navigator={navigator} />;\n    } else if (path === '/topic') {\n      return <Topic {...passProps} key={path} navigator={navigator} />;\n    }\n    return null;\n  };\n\n  render() {\n    return (\n      <Navigator renderPage={this.renderPage} initialRoute={INITIAL_ROUTE} />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { init } from 'redumd';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = init({});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nif (process.env.NODE_ENV === 'production') {\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  // serviceWorker.unregister();\n  serviceWorker.register();\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar PREFIX = 'cnodejs.practice.com';\nvar ACCESS_TOKEN = PREFIX + '.ACCESS_TOKEN';\nvar BASE_URL = 'https://cnodejs.org/api/v1';\n\nvar setAccessToken = function setAccessToken(accessToken) {\n  return localStorage.setItem(ACCESS_TOKEN, accessToken);\n};\n\nvar getAccessToken = exports.getAccessToken = function getAccessToken() {\n  return localStorage.getItem(ACCESS_TOKEN);\n};\n\nvar request = exports.request = function request(path) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    method: 'GET'\n  };\n  var originalReturn = arguments[2];\n  var url = '' + BASE_URL + path;\n  var accesstoken = getAccessToken();\n\n  if (options.method === 'GET' && accesstoken) {\n    url += (url.indexOf('?') >= 0 ? '&' : '?') + 'accesstoken=' + accesstoken;\n  }\n\n  return fetch(url, options).then(function (response) {\n    if (!/application\\/json/.test(response.headers.get('Content-Type'))) {\n      throw new Error('系统错误');\n    }\n\n    return response.json();\n  }).then(function (response) {\n    if (originalReturn) {\n      return response;\n    }\n\n    var success = response.success,\n        error_msg = response.error_msg,\n        data = response.data;\n\n    if (!success) {\n      throw new Error(error_msg);\n    }\n\n    return data;\n  });\n};\n\nvar loadTopicList = exports.loadTopicList = function loadTopicList(tab, page, size) {\n  return request('/topics?page=' + page + '&limit=' + size + (tab ? '&tab=' + tab : ''));\n};\n\nvar loadTopicDetail = exports.loadTopicDetail = function loadTopicDetail(id) {\n  return request('/topic/' + id);\n};\n\nvar collectTopic = exports.collectTopic = function collectTopic(id, isCollect) {\n  return request('/topic_collect/' + (isCollect ? 'collect' : 'de_collect'), {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: 'accesstoken=' + getAccessToken() + '&topic_id=' + id\n  }, true).then(function (response) {\n    var success = response.success,\n        error_msg = response.error_msg;\n\n    if (!success && error_msg) {\n      throw new Error(error_msg);\n    }\n\n    return response;\n  });\n};\n\nvar likeReply = exports.likeReply = function likeReply(id) {\n  return request('/reply/' + id + '/ups', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: 'accesstoken=' + getAccessToken()\n  }, true).then(function (response) {\n    var success = response.success,\n        error_msg = response.error_msg,\n        action = response.action;\n\n    if (!success && error_msg) {\n      throw new Error(error_msg);\n    }\n\n    return action;\n  });\n};\n\nvar loadUserDetail = exports.loadUserDetail = function loadUserDetail(id) {\n  return request('/user/' + id);\n};\n\nvar loadUserCollections = exports.loadUserCollections = function loadUserCollections(id) {\n  return request('/topic_collect/' + id);\n};\n\nvar loadMessages = exports.loadMessages = function loadMessages() {\n  return request('/messages');\n};\n\nvar markMessage = exports.markMessage = function markMessage(id) {\n  return request('/message/mark_one/' + id, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: 'accesstoken=' + getAccessToken()\n  });\n};\n\nvar markAllMessage = exports.markAllMessage = function markAllMessage(id) {\n  return request('message/mark_all', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: 'accesstoken=' + getAccessToken()\n  });\n};\n\nvar login = function login(accesstoken) {\n  return request('/accesstoken', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: 'accesstoken=' + accesstoken\n  }, true).then(function (_ref) {\n    var success = _ref.success,\n        error_msg = _ref.error_msg,\n        data = _objectWithoutProperties(_ref, ['success', 'error_msg']);\n\n    if (!success) {\n      throw new Error(error_msg);\n    }\n\n    setAccessToken(accesstoken);\n    return data;\n  });\n};\n\nexports.login = login;\n\nvar logout = exports.logout = function logout() {\n  return setAccessToken('');\n};"],"sourceRoot":""}